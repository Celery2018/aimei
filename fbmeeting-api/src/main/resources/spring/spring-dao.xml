<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置整合mybatis过程 -->
	<!--&lt;!&ndash; 1.配置数据库相关参数properties的属性：${url} &ndash;&gt;-->
	<!--<context:property-placeholder location="classpath:local.properties" />-->

	<!--&lt;!&ndash; 2.数据库连接池 &ndash;&gt;-->
	<!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource i">-->
		<!--&lt;!&ndash; 配置连接池属性 &ndash;&gt;-->
		<!--<property name="driverClass" value="${jdbc.driver}" />-->
		<!--<property name="jdbcUrl" value="${jdbc.url}" />-->
		<!--<property name="user" value="${jdbc.username}" />-->
		<!--<property name="password" value="${jdbc.password}" />-->

		<!--&lt;!&ndash; c3p0连接池的私有属性 &ndash;&gt;-->
		<!--<property name="maxPoolSize" value="30" />-->
		<!--<property name="minPoolSize" value="10" />-->
		<!--&lt;!&ndash; 关闭连接后不自动commit &ndash;&gt;-->
		<!--<property name="autoCommitOnClose" value="false" />-->
		<!--&lt;!&ndash; 获取连接超时时间 &ndash;&gt;-->
		<!--<property name="checkoutTimeout" value="10000" />-->
		<!--&lt;!&ndash; 当获取连接失败重试次数 &ndash;&gt;-->
		<!--<property name="acquireRetryAttempts" value="2" />-->
	<!--</bean>-->

	<!--1、配置数据库相关参数-->
	<context:property-placeholder location="classpath:local.properties" ignore-unresolvable="true"/>

	<!--2.数据源druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${druid.pool.size.init}" />
		<property name="minIdle" value="${druid.pool.size.min}" />
		<property name="maxActive" value="${druid.pool.size.max}" />

		<!-- 配置监控统计拦截的filters，wall用于防止sql注入，stat用于统计分析 -->
		<property name="filters" value="wall,stat" />
	</bean>

	<!-- 3.配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage" value="com.bizconf.domain.entity" />
		<!-- 扫描sql配置文件:mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="com.bizconf.dao" />
	</bean>
</beans>